{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet timerInterval;\nlet userSelectedDate;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        if (userSelectedDate <= new Date()) {\n            iziToast.error({ title: 'Error', message: 'Please choose a date in the future' });\n            startButton.disabled = true;\n        } else {\n            startButton.disabled = false;\n        }\n    }\n};\n\nflatpickr(datetimePicker, options);\n\nstartButton.addEventListener('click', startTimer);\n\nfunction startTimer() {\n    startButton.disabled = true;\n    datetimePicker.disabled = true;\n\n    timerInterval = setInterval(() => {\n        const currentTime = new Date();\n        const timeDifference = userSelectedDate - currentTime;\n        \n        if (timeDifference <= 0) {\n            clearInterval(timerInterval);\n            datetimePicker.disabled = false;\n            updateTimerDisplay(0, 0, 0, 0);\n            return;\n        }\n        \n        const time = convertMs(timeDifference);\n        updateTimerDisplay(time.days, time.hours, time.minutes, time.seconds);\n    }, 1000);\n}\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor((ms % hour) / minute);\n    const seconds = Math.floor((ms % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}"],"names":["datetimePicker","startButton","daysEl","hoursEl","minutesEl","secondsEl","timerInterval","userSelectedDate","options","selectedDates","iziToast","flatpickr","startTimer","timeDifference","updateTimerDisplay","time","convertMs","days","hours","minutes","seconds","addLeadingZero","ms","value"],"mappings":"+IAKA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EACAC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBF,EAAmBE,EAAc,CAAC,EAC9BF,GAAoB,IAAI,MACxBG,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAChFT,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE9B,CACL,EAEAU,EAAUX,EAAgBQ,CAAO,EAEjCP,EAAY,iBAAiB,QAASW,CAAU,EAEhD,SAASA,GAAa,CAClBX,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE1BM,EAAgB,YAAY,IAAM,CAE9B,MAAMO,EAAiBN,EADH,IAAI,KAGxB,GAAIM,GAAkB,EAAG,CACrB,cAAcP,CAAa,EAC3BN,EAAe,SAAW,GAC1Bc,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7B,MACH,CAED,MAAMC,EAAOC,EAAUH,CAAc,EACrCC,EAAmBC,EAAK,KAAMA,EAAK,MAAOA,EAAK,QAASA,EAAK,OAAO,CACvE,EAAE,GAAI,CACX,CAEA,SAASD,EAAmBG,EAAMC,EAAOC,EAASC,EAAS,CACvDlB,EAAO,YAAcmB,EAAeJ,CAAI,EACxCd,EAAQ,YAAckB,EAAeH,CAAK,EAC1Cd,EAAU,YAAciB,EAAeF,CAAO,EAC9Cd,EAAU,YAAcgB,EAAeD,CAAO,CAClD,CAEA,SAASJ,EAAUM,EAAI,CAMnB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAOG,EAAK,KAAQ,GAAM,EACzCF,EAAU,KAAK,MAAOE,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAeE,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}